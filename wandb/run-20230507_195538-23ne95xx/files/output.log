loadding data
reading category information







100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:16<00:00, 8380.56it/s]
reading train data



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2571752/2571752 [00:05<00:00, 429365.92it/s]
reading valid data

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 845781/845781 [00:03<00:00, 229871.91it/s]
reading test data
get weight for each sample
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:00<00:00, 1265031.37it/s]
Traceback (most recent call last):
  File "main.py", line 51, in <module>
    score_pos, score_neg = model(graph_pos, graph_neg)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gwy/BaseSAT/BaseGAT/models/models.py", line 59, in forward
    h = self.get_embedding()
  File "/home/gwy/BaseSAT/BaseGAT/models/models.py", line 98, in get_embedding
    h_item = layer(self.graph, h, ('user', 'rate', 'item'))
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gwy/BaseSAT/BaseGAT/models/layers.py", line 103, in forward
    graph.update_all(self.category_aggregation, self.sub_reduction, etype = etype)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/heterograph.py", line 4781, in update_all
    ndata = core.message_passing(g, message_func, reduce_func, apply_node_func)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/core.py", line 398, in message_passing
    msgdata = invoke_edge_udf(
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/core.py", line 98, in invoke_edge_udf
    return func(ebatch)
  File "/home/gwy/BaseSAT/BaseGAT/models/layers.py", line 88, in category_aggregation
    return {'c': edges.src['category'], 'm': edges.src['h']}
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/frame.py", line 688, in __getitem__
    return self._columns[name].data
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/frame.py", line 254, in data
    self.storage = F.gather_row(self.storage, self.index)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/dgl/backend/pytorch/tensor.py", line 238, in gather_row
    return th.index_select(data, 0, row_index.long())
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 314.00 MiB (GPU 0; 9.78 GiB total capacity; 1.12 GiB already allocated; 132.31 MiB free; 1.43 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF