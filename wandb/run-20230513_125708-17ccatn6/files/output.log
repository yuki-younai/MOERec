loadding data
reading category information






100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:14<00:00, 9548.78it/s]
reading train data


100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2571752/2571752 [00:05<00:00, 474855.94it/s]
reading valid data
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 845781/845781 [00:01<00:00, 442896.32it/s]
reading test data
get weight for each sample
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:00<00:00, 2109605.01it/s]
model already setting
Starting new HTTPS connection (1): o151352.ingest.sentry.io:443
https://o151352.ingest.sentry.io:443 "POST /api/5288891/envelope/ HTTP/1.1" 200 2
train loss = 0.24724596738815308
loss: 0.3251062035560608, Performance is better... saving the model
Traceback (most recent call last):
  File "main.py", line 54, in <module>
    score_pos, score_neg,loss_moe = model(graph_pos, graph_neg)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gwy/BaseSAT/BaseGAT/models/models.py", line 69, in forward
    h,loss = self.get_embedding()
  File "/home/gwy/BaseSAT/BaseGAT/models/models.py", line 227, in get_embedding
    expert_outputs.append(self.attention_experts[i](expert_inputs_user[i]))
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gwy/BaseSAT/BaseGAT/models/models.py", line 253, in forward
    muti_int = torch.sum(muti_int * weight, dim = 1)#65000 32 32 32 1
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 9.78 GiB total capacity; 8.08 GiB already allocated; 2.31 MiB free; 8.50 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF