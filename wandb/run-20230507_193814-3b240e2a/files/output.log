loadding data
reading category information





100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:13<00:00, 9958.24it/s]
reading train data



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2571752/2571752 [00:05<00:00, 488823.83it/s]
reading valid data
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 845781/845781 [00:01<00:00, 430881.05it/s]
reading test data
get weight for each sample
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 136710/136710 [00:00<00:00, 2252535.95it/s]
train loss = 0.3392277657985687
loss: 0.37952688336372375, Performance is better... saving the model
train loss = 0.3034798204898834
loss: 0.3537806272506714, Performance is better... saving the model
train loss = 0.2711954116821289
Starting new HTTPS connection (1): o151352.ingest.sentry.io:443
https://o151352.ingest.sentry.io:443 "POST /api/5288891/envelope/ HTTP/1.1" 200 2
loss: 0.33303892612457275, Performance is better... saving the model
train loss = 0.24721409380435944
loss: 0.31948989629745483, Performance is better... saving the model
train loss = 0.22999007999897003
loss: 0.3061845004558563, Performance is better... saving the model
train loss = 0.21588769555091858
loss: 0.295564204454422, Performance is better... saving the model
train loss = 0.20385897159576416
loss: 0.2868536114692688, Performance is better... saving the model
train loss = 0.19377322494983673
loss: 0.2762562334537506, Performance is better... saving the model
train loss = 0.18524333834648132
loss: 0.26979508996009827, Performance is better... saving the model
train loss = 0.17739933729171753
  0%|                                                                                                                                                                            | 0/41 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 82, in <module>
    res,ndcg5_std,ndcg10_std,mrr_std,auc_std=tester.test()
  File "/home/gwy/BaseSAT/BaseGAT/utils/tester.py", line 121, in test
    auc,mrr,ndcg5,ndcg10=compute_amn(y_true, y_score)
  File "/home/gwy/BaseSAT/BaseGAT/utils/tester.py", line 30, in compute_amn
    auc = roc_auc_score(y_true,y_score)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/sklearn/metrics/_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/sklearn/utils/validation.py", line 856, in check_array
    array = np.asarray(array, order=order, dtype=dtype)
  File "/home/gwy/anaconda3/envs/PyTorch/lib/python3.8/site-packages/torch/_tensor.py", line 955, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.